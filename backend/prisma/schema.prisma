// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Filme {
  id                    Int      @id @default(autoincrement())
  titulo_curado         String   @db.VarChar(255)
  titulo_api            String?  @db.VarChar(255)
  sinopse               String?  @db.Text
  poster_curado         String?  @db.VarChar(255)
  poster_url_api        String?  @db.VarChar(255)
  data_lancamento_curada String?  @db.VarChar(10)
  data_lancamento_api   String?  @db.VarChar(10)
  avaliacao             Float?
  generos               String[] 
  plataformas_curadas   String[] 
  em_cartaz             Boolean  @default(false)
  em_prevenda           Boolean  @default(false)
  duracao               String?  @db.VarChar(50)
  direcao               String?  @db.VarChar(255)
  roteiro               String?  @db.VarChar(255)
}

model Serie {
  id                    Int      @id @default(autoincrement())
  titulo_curado         String   @db.VarChar(255)
  titulo_api            String?  @db.VarChar(255)
  sinopse               String?  @db.Text
  poster_curado         String?  @db.VarChar(255)
  poster_url_api        String?  @db.VarChar(255)
  data_lancamento_curada String?  @db.VarChar(10)
  data_lancamento_api   String?  @db.VarChar(10)
  avaliacao             Float?
  generos               String[] 
  plataformas_curadas   String[] 
  numero_temporadas     Int?
  numero_episodios      Int?
  criadores             String?  @db.VarChar(255)
}

model Anime {
  id                    Int      @id @default(autoincrement())
  titulo_curado         String   @db.VarChar(255)
  titulo_api            String?  @db.VarChar(255)
  sinopse               String?  @db.Text
  poster_curado         String?  @db.VarChar(255)
  poster_url_api        String?  @db.VarChar(255)
  data_lancamento_curada String?  @db.VarChar(10)
  data_lancamento_api   String?  @db.VarChar(10)
  avaliacao             Float?
  generos               String[] 
  plataformas_curadas   String[] 
  numero_episodios      Int?
  fonte                 String?  @db.VarChar(100)
  estudio               String?  @db.VarChar(255)
  status_dublagem      String?  @db.VarChar(50)
  proximo_episodio      String?  @db.VarChar(50)
}

model Jogo {
  id                    Int      @id @default(autoincrement())
  titulo_curado         String   @db.VarChar(255)
  titulo_api            String?  @db.VarChar(255)
  sinopse               String?  @db.Text
  poster_curado         String?  @db.VarChar(255)
  poster_url_api        String?  @db.VarChar(255)
  data_lancamento_curada String?  @db.VarChar(10)
  data_lancamento_api   String?  @db.VarChar(10)
  avaliacao             Float?
  generos               String[] 
  plataformas_curadas   String[] 
  desenvolvedores       String?  @db.VarChar(255)
  publicadoras          String?  @db.VarChar(255)
}

model Usuario {
  id                    Int      @id @default(autoincrement())
  nome                  String   @db.VarChar(100)
  email                 String   @unique @db.VarChar(100)
  senha_hash            String   @db.VarChar(255)
  data_cadastro         DateTime @default(now())
  avatar_url            String?  @db.VarChar(255)
  bio                   String?  @db.Text
  notificacoes          Notificacao[]
  interacoes            Interacao[]
}

model Notificacao {
  id                    Int      @id @default(autoincrement())
  usuario_id            Int
  titulo                String   @db.VarChar(255)
  tipo                  String   @db.VarChar(50)
  lida                  Boolean  @default(false)
  data_criacao          DateTime @default(now())
  midia_id              Int?
  tipo_midia            String?  @db.VarChar(20)
  usuario               Usuario  @relation(fields: [usuario_id], references: [id])
}

model Interacao {
  id                    Int      @id @default(autoincrement())
  usuario_id            Int
  midia_id              Int
  tipo_midia            String   @db.VarChar(20)
  tipo_interacao        String   @db.VarChar(20)
  valor                 Float?
  comentario            String?  @db.Text
  data_interacao        DateTime @default(now())
  usuario               Usuario  @relation(fields: [usuario_id], references: [id])
}