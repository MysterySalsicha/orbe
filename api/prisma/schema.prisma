// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// ENUMS for Media data for type safety and consistency

enum MediaFormat {
  TV
  TV_SHORT
  MOVIE
  SPECIAL
  OVA
  ONA
  MUSIC
}

enum MediaStatus {
  FINISHED
  RELEASING
  NOT_YET_RELEASED
  CANCELLED
  HIATUS
}

enum MediaSeason {
  WINTER
  SPRING
  SUMMER
  FALL
}

enum MediaSource {
  ORIGINAL
  MANGA
  LIGHT_NOVEL
  VISUAL_NOVEL
  VIDEO_GAME
  OTHER
}

enum CharacterRole {
  MAIN
  SUPPORTING
  BACKGROUND
}

enum GameCategory {
  MAIN_GAME
  DLC_ADDON
  EXPANSION
  BUNDLE
  STANDALONE_EXPANSION
  MOD
  EPISODE
  SEASON
  REMAKE
  REMASTER
  EXPANDED_GAME
  PORT
  FORK
}

enum GameStatus {
  RELEASED
  ALPHA
  BETA
  EARLY_ACCESS
  OFFLINE
  CANCELLED
  RUMORED
  DELISTED
}


// MODELS for TMDB Media (Filme, Serie)

model Filme {
  id                      Int       @id // From TMDB

  // Titles
  title_api               String?   @db.VarChar(255)
  original_title_api      String?   @db.VarChar(255)
  title_curado            String?   @db.VarChar(255)

  // Overview
  overview_api            String?   @db.Text
  overview_curado         String?   @db.Text

  // Images
  poster_path_api         String?   @db.VarChar(255)
  poster_path_curado      String?   @db.VarChar(255)
  backdrop_path_api       String?   @db.VarChar(255)
  backdrop_path_curado    String?   @db.VarChar(255)

  // Dates
  release_date_api        DateTime? @db.Date
  release_date_curado     DateTime? @db.Date

  // Details
  status_api              String?   @db.VarChar(50)
  runtime_api             Int?
  runtime_curado          Int?

  // Ratings & Popularity
  avaliacao_api           Float?
  vote_count_api          Int?
  popularity_api          Float?

  // Rich Data stored as JSON
  genres_api              Json?     @db.JsonB
  spoken_languages_api    Json?     @db.JsonB
  production_countries_api Json?    @db.JsonB
  production_companies_api Json?    @db.JsonB
  videos_api              Json?     @db.JsonB
  watch_providers_api     Json?     @db.JsonB
  cast_api                Json?     @db.JsonB
  crew_api                Json?     @db.JsonB

  // Curated JSON fields
  genres_curado           Json?     @db.JsonB
  cast_curado             Json?     @db.JsonB
  crew_curado             Json?     @db.JsonB

  // Legacy fields for existing functionality
  ingresso_link           String?   @db.VarChar(255)
  em_prevenda             Boolean   @default(false)
}

model Serie {
  id                      Int       @id // From TMDB

  // Titles
  name_api                String?   @db.VarChar(255)
  original_name_api       String?   @db.VarChar(255)
  name_curado             String?   @db.VarChar(255)

  // Overview
  overview_api            String?   @db.Text
  overview_curado         String?   @db.Text

  // Images
  poster_path_api         String?   @db.VarChar(255)
  poster_path_curado      String?   @db.VarChar(255)
  backdrop_path_api       String?   @db.VarChar(255)
  backdrop_path_curado    String?   @db.VarChar(255)

  // Dates
  first_air_date_api      DateTime? @db.Date
  last_air_date_api       DateTime? @db.Date
  first_air_date_curado   DateTime? @db.Date

  // Details
  number_of_seasons_api   Int?
  number_of_episodes_api  Int?
  episode_run_time_api    Json?     @db.JsonB

  // Ratings & Popularity
  avaliacao_api           Float?
  vote_count_api          Int?
  popularity_api          Float?

  // Rich Data stored as JSON
  genres_api              Json?     @db.JsonB
  created_by_api          Json?     @db.JsonB
  networks_api            Json?     @db.JsonB
  seasons_api             Json?     @db.JsonB
  videos_api              Json?     @db.JsonB
  watch_providers_api     Json?     @db.JsonB
  cast_api                Json?     @db.JsonB
  crew_api                Json?     @db.JsonB

  // Curated JSON fields
  genres_curado           Json?     @db.JsonB
  cast_curado             Json?     @db.JsonB
  crew_curado             Json?     @db.JsonB
}


// MODEL for IGDB Media (Jogo) - NEW STRUCTURE

model Jogo {
  id                      Int       @id // From IGDB

  // Titles & Identifiers
  name_api                String?   @db.VarChar(255)
  name_curado             String?   @db.VarChar(255)
  slug_api                String?   @db.VarChar(255)

  // Descriptions
  summary_api             String?   @db.Text
  storyline_api           String?   @db.Text
  summary_curado          String?   @db.Text

  // Dates
  first_release_date_api  DateTime? @db.Date
  first_release_date_curado DateTime? @db.Date

  // Details
  category_api            GameCategory?
  status_api              GameStatus?

  // Rating
  avaliacao_api           Float?

  // Rich Data stored as JSON
  cover_api               Json?     @db.JsonB
  screenshots_api         Json?     @db.JsonB
  artworks_api            Json?     @db.JsonB
  videos_api              Json?     @db.JsonB
  genres_api              Json?     @db.JsonB
  themes_api              Json?     @db.JsonB
  player_perspectives_api Json?     @db.JsonB
  platforms_api           Json?     @db.JsonB
  involved_companies_api  Json?     @db.JsonB
  websites_api            Json?     @db.JsonB

  // Curated JSON fields
  genres_curado           Json?     @db.JsonB
  platforms_curado        Json?     @db.JsonB

  // Relation to Events
  eventos                 EventoAnuncio[]
}

model EventoAnuncio {
  id                      Int       @id // From IGDB
  name_api                String?   @db.VarChar(255)
  description_api         String?   @db.Text
  start_time_api          DateTime?
  end_time_api            DateTime?
  logo_api                Json?

  name_curado             String?   @db.VarChar(255)

  jogos                   Jogo[]
}


// ANIME-RELATED MODELS (Denormalized)

model Anime {
  id                      Int      @id // From Anilist
  idMal                   Int? // MyAnimeList ID

  // Titles
  title_api               Json?
  nome_curado             String? // Formerly title_curado

  // Basic Info
  format_api              String?
  status_api              String?
  
  // Description
  description_api         String? @db.Text
  description_curado      String? @db.Text

  // Dates
  startDate_api           DateTime?
  endDate_api             DateTime?
  startDate_curado        DateTime?
  endDate_curado          DateTime?

  // Season
  season_api              String?
  seasonYear_api          Int?

  // Details
  episodes_api            Int?
  episodes_curado         Int?
  duration_api            Int?
  duration_curado         Int?
  countryOfOrigin_api     String?
  source_api              String?
  source_curado           String?

  // Images
  coverImage_api          Json?
  bannerImage_api         String?
  poster_path_curado      String? // Formerly coverImage_curado
  bannerImage_curado      String?

  // Advanced Features
  nextAiringEpisode_api   Json?
  trailer_api             Json?
  trailer_url_curado      String? // Formerly trailer_curado

  // Rating
  avaliacao_api           Float?

  // Genres (as string array)
  genres_api              String[]
  genres_curado           String[]
  
  // Denormalized relational data as JSON
  tags_api                Json?
  streamingEpisodes_api   Json?
  characters_api          Json?
  staff_api               Json?
  studios_api             Json?

  // Curated denormalized data
  tags_curado             Json?
  plataformas_curado      Json? // Formerly streamingEpisodes_curado
  characters_curado       Json?
  staff_curado            Json?
  studios_curado          Json?
}


// USER-RELATED MODELS (Unchanged)

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique @db.VarChar(255)
  hashed_password String    @db.VarChar(255)
  role            String    @default("user") @db.VarChar(50)
  quer_avaliar    Boolean   @default(true)
  data_criacao    DateTime  @default(now()) @db.Timestamp()
  preferencias    preferencias_usuario_midia[]
}

model preferencias_usuario_midia {
  id              Int       @id @default(autoincrement())
  usuario_id      Int
  midia_id        Int
  tipo_midia      String    @db.VarChar(50)
  status          String    @db.VarChar(50)
  avaliacao       String?   @db.VarChar(50)
  data_interacao  DateTime  @default(now()) @db.Timestamp()
  usuario         User      @relation(fields: [usuario_id], references: [id])
}

model Notificacao {
  id              Int       @id @default(autoincrement())
  usuario_id      Int?
  midia_id        Int?
  tipo_midia      String?   @db.VarChar(50)
  titulo          String    @db.VarChar(255)
  tipo_notificacao String   @db.VarChar(50)
  foi_visualizada Boolean   @default(false)
  data_criacao    DateTime  @default(now()) @db.Timestamp()
}
